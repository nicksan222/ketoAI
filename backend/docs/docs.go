// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "nicksan222@icloud.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ingredients/{ingredient_id}": {
            "get": {
                "description": "Retrieves the ingredient by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ingredients"
                ],
                "summary": "Retrieve a single ingredient",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ingredient ID",
                        "name": "ingredient_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingredient found and returned successfully.",
                        "schema": {
                            "$ref": "#/definitions/ingredients_get.GetIngredientResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Missing ingredient ID.",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found - Ingredient not found.",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ingredients.Ingredient": {
            "type": "object",
            "properties": {
                "approved": {
                    "description": "Users can insert custom ingredients, but must be approved first by admins",
                    "type": "boolean"
                },
                "carbs": {
                    "type": "number"
                },
                "fat": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "is_main_ingredient": {
                    "description": "Main ingredients are used in the calculation of the macros of a recipe",
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protein": {
                    "type": "number"
                },
                "quantity_measurement": {
                    "type": "string"
                }
            }
        },
        "ingredients_get.GetIngredientResponse": {
            "type": "object",
            "properties": {
                "ingredient": {
                    "$ref": "#/definitions/ingredients.Ingredient"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "backend:4000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "KetoAI API",
	Description:      "This is the KetoAI API server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
